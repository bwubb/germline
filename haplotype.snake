
import datetime
import sys
import os

with open(config['project']['sample_list'],'r') as infile:#sample_list in config, default is samples.list
    SAMPLES=infile.read().splitlines()

with open(config['project']['bam_list'],'r') as b:
        BAMS=dict(line.split('\t') for line in b.read().splitlines())

def select_output(wilcards):
    if 'Exon' in config['resources']['library']['key']:
        return "data/work/{name}/{library}/gatk-haplotype.vqsr_recalibrated.snps.indels.vcf.gz".format(name=config['project']['name'],library=config['resources']['library']['key'])
    else:
        return "data/work/{name}/{library}/gatk-haplotype.hard-filter_recalibrated.snps.indels.vcf.gz".format(name=config['project']['name'],library=config['resources']['library']['key'])

def bam_input(wildcards):
    return BAMS[wildcards.sample]

localrules: MakeInputList

#rule all:
#    input:
#        select_output

rule all_gvcf:
    input:
        expand('data/work/{reference}/{sample}/gatk/haplotype.g.vcf.gz',reference=config['reference']['key'],sample=SAMPLES)

rule HaplotypeCaller_GVCF:
    input:
        bam_input
    output:
        "data/work/{config['reference']['key']}/{sample}/gatk/haplotype.g.vcf.gz"
    params:
        reference=config['reference']['fasta'],
        memory='10240m'
    shell:
        "java -Xmx{params.memory} -jar $HOME/software/GenomeAnalysisTK-3.7/GenomeAnalysisTK.jar -R {params.reference} -T HaplotypeCaller -I {input} --emitRefConfidence GVCF -o {output} -G Standard -G AS_Standard"

rule MakeInputList:
    input:
        expand("data/final/{sample}/{library}/gatk-haplotype.g.vcf.gz",sample=SAMPLES,library=config['resources']['library']['key'])
    output:
        "input.list"#definitley need something unique.
    run:
        with open(output[0],'w') as file:
            file.write('\n'.join(input))

#NEW thing, not an input list
#GATK4 GenotypeGVCFs takes only a single VCF as input. Run GenomicsDBImport to combine all GVCFs into a single VCF before running GenotypeGVCFs.
#CombineGVCFs

rule GenotypeGVCFs:
    input:
        "input.list"
    output:
        "data/work/{name}/{library}/gatk-haplotype.raw.snps.indels.vcf.gz"
    params:
        reference=config['resources']['reference']['fasta'],
        intervals=config['resources']['library']['intervals'],
        memory="56320m"
    shell:
        "java -Xmx{params.memory} -jar $HOME/software/GenomeAnalysisTK-3.7/GenomeAnalysisTK.jar -R {params.reference} -T GenotypeGVCFs -V {input} --disable_auto_index_creation_and_locking_when_reading_rods -L {params.intervals} -o {output}"

rule copy_cohort_raw:
    input:
        "data/work/{name}/{library}/gatk-haplotype.raw.snps.indels.vcf.gz"
    output:
        "data/final/{name}/{library}/gatk-haplotype.raw.snps.indels.vcf.gz"
    shell:
        "rsync {input} {output}"

rule RawVCF:
    input:
        "data/work/{name}/{library}/gatk-haplotype.raw.snps.indels.vcf.gz"
    output:
        "data/work/{sample}/{library}/gatk-haplotype.raw.snps.indel.vcf.gz"
    params:
        reference=config['resources']['reference']['fasta'],
        intervals=config['resources']['library']['intervals'],
        memory='10240m'
    shell:
        "java -Xmx{params.memory} -jar $HOME/software/GenomeAnalysisTK-3.7/GenomeAnalysisTK.jar -R {params.reference} -T SelectVariants -V {input} -L {params.intervals} -env -sn {wildcards.sample} -o {output}"

rule copy_sample_raw:
    input:
        "data/work/{sample}/{library}/gatk-haplotype.raw.snps.indel.vcf.gz"
    output:
        "data/final/{sample}/{library}/gatk-haplotype.raw.snps.indel.vcf.gz"
    shell:
        "rsync {input} {output}"

rule select_raw_snps:#Try to make a one fits all rule, {work_path}=/somthing/work/{name}/{library}/gatk-haplotype/raw.snps.vcf.gz
    input:
        "data/work/{name}/{library}/gatk-haplotype.raw.snps.indels.vcf.gz"
    output:
        "data/work/{name}/{library}/gatk-haplotype.raw.snps.vcf.gz"
    params:
        reference=config['resources']['reference']['fasta'],
        intervals=config['resources']['library']['intervals'],
        memory='10240m'
    shell:
        "java -Xmx{params.memory} -jar $HOME/software/GenomeAnalysisTK-3.7/GenomeAnalysisTK.jar -R {params.reference} -T SelectVariants -V {input} -L {params.intervals} -selectType SNP -o {output}"

#I think Im going to split snps and indels
#But I worry about MNP
rule select_raw_indels:
    input:
        "data/work/{name}/{library}/gatk-haplotype.raw.snps.indels.vcf.gz"
    output:
        "data/work/{name}/{library}/gatk-haplotype.raw.indels.vcf.gz"
    params:
        reference=config['resources']['reference']['fasta'],
        intervals=config['resources']['library']['intervals'],
        memory='10240m'
    shell:
        "java -Xmx{params.memory} -jar $HOME/software/GenomeAnalysisTK-3.7/GenomeAnalysisTK.jar -R {params.reference} -T SelectVariants -V {input} -L {params.intervals} -selectType INDEL -o {output}"

rule VQSR_snp_model:
    input:
        "data/work/{name}/{library}/gatk-haplotype.raw.snps.vcf.gz"
    output:
        recalFile="data/work/{name}/{library}/snps.recal",
        tranchesFile="data/work/{name}/{library}/snps.tranches",
        rscriptFile="data/work/{name}/{library}/snps.R"
    params:
        reference=config['resources']['reference']['fasta'],
        hapmap="/home/bwubb/b37_genomes/hapmap_3.3.b37.sites.vcf",
        omni="/home/bwubb/b37_genomes/1000G_omni2.5.b37.sites.vcf",
        _1000G="/home/bwubb/b37_genomes/1000G_phase1.snps.high_confidence.b37.vcf",
        dbsnp="/home/bwubb/b37_genomes/dbsnp_137.b37.vcf",
        memory='10240m'
    shell:
        "java -Xmx{params.memory} -jar $HOME/software/GenomeAnalysisTK-3.7/GenomeAnalysisTK.jar -R {params.reference} -T VariantRecalibrator -input {input} "
        "-recalFile {output.recalFile} -tranchesFile {output.tranchesFile} -rscriptFile {output.rscriptFile} "
        "--resource:hapmap,known=false,training=true,truth=true,prior=15.0 {params.hapmap} "
        "--resource:omni,known=false,training=true,truth=true,prior=12.0 {params.omni} "
        "--resource:1000G,known=false,training=true,truth=false,prior=10.0 {params._1000G} "
        "--resource:dbsnp,known=true,training=false,truth=false,prior=2.0 {params.dbsnp} "
        "-an QD -an MQRankSum -an ReadPosRankSum -an FS -an SOR -an DP -an InbreedingCoeff "
        "-mode SNP -titv 3.0 "
        "-tranche 100.0 -tranche 99.9 -tranche 99.5 "
        "-tranche 99.3 -tranche 99.0 -tranche 98.9 "
        "-tranche 98.8 -tranche 98.6 -tranche 98.5 "
        "-tranche 98.3 -tranche 98.2 -tranche 98.1 "
        "-tranche 98.0 -tranche 97.9 -tranche 97.8 "
        "-tranche 97.5 -tranche 97.0 -tranche 95.0 "
        "-tranche 90.0"

rule VQSR_indel_model:
    input:
        "data/work/{name}/{library}/gatk-haplotype.raw.indels.vcf.gz"
    output:
        recalFile="data/work/{name}/{library}/indels.recal",
        tranchesFile="data/work/{name}/{library}/indels.tranches",
        rscriptFile="data/work/{name}/{library}/indels.R"
    params:
        reference=config['resources']['reference']['fasta'],
        mills="/home/bwubb/b37_genomes/Mills_and_1000G_gold_standard.indels.b37.sites.vcf",
        dbsnp="/home/bwubb/b37_genomes/dbsnp_137.b37.vcf",
        memory='10240m'
    shell:
        "java -Xmx{params.memory} -jar $HOME/software/GenomeAnalysisTK-3.7/GenomeAnalysisTK.jar -R {params.reference} -T VariantRecalibrator -input {input} "
        "-recalFile {output.recalFile} -tranchesFile {output.tranchesFile} -rscriptFile {output.rscriptFile} "
        "--resource:mills,known=false,training=true,truth=true,prior=12.0 {params.mills} "
        "--resource:dbsnp,known=true,training=false,truth=false,prior=2.0 {params.dbsnp} "
        "-an FS -an SOR -an QD -an MQRankSum -an ReadPosRankSum -an InbreedingCoeff "
        "-mode INDEL "
        "-tranche 100.0 -tranche 99.9 -tranche 99.5 "
        "-tranche 99.3 -tranche 99.0 -tranche 98.9 "
        "-tranche 98.8 -tranche 98.6 -tranche 98.5 "
        "-tranche 98.3 -tranche 98.2 -tranche 98.1 "
        "-tranche 98.0 -tranche 97.9 -tranche 97.8 "
        "-tranche 97.5 -tranche 97.0 -tranche 95.0 "
        "-tranche 90.0"

rule Apply_snp_model:
    input:
        vcf="data/work/{name}/{library}/gatk-haplotype.raw.snps.vcf.gz",
        recalFile="data/work/{name}/{library}/snps.recal",
        tranchesFile="data/work/{name}/{library}/snps.tranches"
    output:
        "data/work/{name}/{library}/gatk-haplotype.vqsr_recalibrated.snps.vcf.gz"
    params:
        reference=config['resources']['reference']['fasta'],
        memory='10240m'
    shell:
        "java -Xmx{params.memory} -jar $HOME/software/GenomeAnalysisTK-3.7/GenomeAnalysisTK.jar -R {params.reference} -T ApplyRecalibration "
        "-recalFile {input.recalFile} -tranchesFile {input.tranchesFile} -input {input.vcf} --ts_filter_level 99.6 -mode SNP -o {output}"

rule Apply_indel_model:
    input:
        vcf="data/work/{name}/{library}/gatk-haplotype.raw.indels.vcf.gz",
        recalFile="data/work/{name}/{library}/indels.recal",
        tranchesFile="data/work/{name}/{library}/indels.tranches",
    output:
        "data/work/{name}/{library}/gatk-haplotype.vqsr_recalibrated.indels.vcf.gz"
    params:
        reference=config['resources']['reference']['fasta'],
        memory='10240m'
    shell:
        "java -Xmx{params.memory} -jar $HOME/software/GenomeAnalysisTK-3.7/GenomeAnalysisTK.jar -R {params.reference} -T ApplyRecalibration "
        "-recalFile {input.recalFile} -tranchesFile {input.tranchesFile} -input {input.vcf} --ts_filter_level 97.0 -mode INDEL -o {output}"

rule Hard_Filter_snp:#verify this still follows best practices
    input:
        "data/work/{name}/{library}/gatk-haplotype.raw.snps.vcf.gz"
    output:
        "data/work/{name}/{library}/gatk-haplotype.hard-filter_recalibrated.snps.vcf.gz"
    params:
        reference=config['resources']['reference']['fasta'],
        memory='10240m'
    shell:
        "java -Xmx{params.memory} -jar $HOME/software/GenomeAnalysisTK-3.7/GenomeAnalysisTK.jar -R {params.reference} -T VariantFiltration -V {input} -o {output} "
        "--filterExpression 'QD < 2.0' --filterName 'SNP_QD' --filterExpression 'FS > 60.0' --filterName 'SNP_FS' --filterExpression 'MQ < 40.0' --filterName 'SNP_MQ' "
        "--filterExpression 'MQRankSum < -12.5' --filterName 'SNP_MQRankSum' --filterExpression 'ReadPosRankSum < -8.0' --filterName 'SNP_ReadPosRankSum' --filterExpression 'SOR > 3.0' --filterName 'SNP_SOR'"

rule Hard_Filter_indel:
    input:
        "data/work/{name}/{library}/gatk-haplotype.raw.indels.vcf.gz"
    output:
        "data/work/{name}/{library}/gatk-haplotype.hard-filter_recalibrated.indels.vcf.gz"
    params:
        reference=config['resources']['reference']['fasta'],
        memory='10240m'
    shell:
        "java -Xmx{params.memory} -jar $HOME/software/GenomeAnalysisTK-3.7/GenomeAnalysisTK.jar -R {params.reference} -T VariantFiltration -V {input} -o {output} "
        "--filterExpression 'QD < 2.0' --filterName 'INDEL_QD' --filterExpression 'FS > 200.0' --filterName 'INDEL_FS' "
        "--filterExpression 'ReadPosRankSum < -20.0' --filterName 'INDEL_ReadPosRankSum' --filterExpression 'SOR > 10.0' --filterName 'INDEL_SOR'"

def select_filter(wildcards):
    if 'Exon' in config['resources']['library']['key']:
        return {"snp":"data/work/{wildcards.name}/{wildcards.library}/gatk-haplotype.vqsr_recalibrated.snps.vcf.gz".format(wildcards=wildcards),
        "indel":"data/work/{wildcards.name}/{wildcards.library}/gatk-haplotype.vqsr_recalibrated.indels.vcf.gz".format(wildcards=wildcards)}
    else:
        return {"snp":"data/work/{wildcards.name}/{wildcards.library}/gatk-haplotype.hard-filter_recalibrated.snps.vcf.gz".format(wildcards=wildcards),
        "indel":"data/work/{wildcards.name}/{wildcards.library}/gatk-haplotype.hard-filter_recalibrated.indels.vcf.gz".format(wildcards=wildcards)}

rule Combine_snp_indels:
    input:
        unpack(select_filter)
    output:
        "data/work/{name}/{library}/gatk-haplotype.{filter}_recalibrated.snps.indels.vcf.gz"
    params:
        reference=config['resources']['reference']['fasta'],
        memory='10240m'
    shell:
        "java -Xmx{params.memory} -jar $HOME/software/GenomeAnalysisTK-3.7/GenomeAnalysisTK.jar -R {params.reference} -T CombineVariants "
        "--variant:snp {input.snp} --variant:indel {input.indel} -priority snp,indel --assumeIdenticalSamples -env -o {output}"

rule FilteredVCF:
    input:
        "data/final/{name}/{library}/gatk-haplotype.{filter}_recalibrated.snps.indels.vcf.gz"
    output:
        "data/final/{sample}/{library}/gatk-haplotype.{filter}_recalibrated.pass.snps.indel.vcf.gz"
    params:
        reference=config['resources']['reference']['fasta'],
        intervals=config['resources']['library']['intervals'],
        memory='10240m'
    shell:
        "java -Xmx{params.memory} -jar $HOME/software/GenomeAnalysisTK-3.7/GenomeAnalysisTK.jar -R {params.reference} -T SelectVariants -V {input} -L {params.intervals} -env -ef -sn {wildcards.sample} -o {output}"
